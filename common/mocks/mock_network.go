// Code generated by MockGen. DO NOT EDIT.
// Source: network.go

// Package mocks is a generated GoMock package.
package mocks

import (
	protos "github.com/Grivn/phalanx/common/protos"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNetworkService is a mock of NetworkService interface
type MockNetworkService struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkServiceMockRecorder
}

// MockNetworkServiceMockRecorder is the mock recorder for MockNetworkService
type MockNetworkServiceMockRecorder struct {
	mock *MockNetworkService
}

// NewMockNetworkService creates a new mock instance
func NewMockNetworkService(ctrl *gomock.Controller) *MockNetworkService {
	mock := &MockNetworkService{ctrl: ctrl}
	mock.recorder = &MockNetworkServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNetworkService) EXPECT() *MockNetworkServiceMockRecorder {
	return m.recorder
}

// BroadcastCommand mocks base method
func (m *MockNetworkService) BroadcastCommand(command *protos.Command) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BroadcastCommand", command)
}

// BroadcastCommand indicates an expected call of BroadcastCommand
func (mr *MockNetworkServiceMockRecorder) BroadcastCommand(command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BroadcastCommand", reflect.TypeOf((*MockNetworkService)(nil).BroadcastCommand), command)
}

// BroadcastPCM mocks base method
func (m *MockNetworkService) BroadcastPCM(message *protos.ConsensusMessage) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BroadcastPCM", message)
}

// BroadcastPCM indicates an expected call of BroadcastPCM
func (mr *MockNetworkServiceMockRecorder) BroadcastPCM(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BroadcastPCM", reflect.TypeOf((*MockNetworkService)(nil).BroadcastPCM), message)
}

// UnicastPCM mocks base method
func (m *MockNetworkService) UnicastPCM(message *protos.ConsensusMessage) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UnicastPCM", message)
}

// UnicastPCM indicates an expected call of UnicastPCM
func (mr *MockNetworkServiceMockRecorder) UnicastPCM(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnicastPCM", reflect.TypeOf((*MockNetworkService)(nil).UnicastPCM), message)
}
