// Code generated by MockGen. DO NOT EDIT.
// Source: network.go

package mocks

import (
	protos "github.com/Grivn/phalanx/common/protos"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNetworkService is a mock of NetworkService interface
type MockNetworkService struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkServiceMockRecorder
}

// MockNetworkServiceMockRecorder is the mock recorder for MockNetworkService
type MockNetworkServiceMockRecorder struct {
	mock *MockNetworkService
}

// NewMockNetworkService creates a new mock instance
func NewMockNetworkService(ctrl *gomock.Controller) *MockNetworkService {
	mock := &MockNetworkService{ctrl: ctrl}
	mock.recorder = &MockNetworkServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockNetworkService) EXPECT() *MockNetworkServiceMockRecorder {
	return _m.recorder
}

// Broadcast mocks base method
func (_m *MockNetworkService) Broadcast(message *protos.ConsensusMessage) {
	_m.ctrl.Call(_m, "Broadcast", message)
}

// Broadcast indicates an expected call of Broadcast
func (_mr *MockNetworkServiceMockRecorder) Broadcast(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Broadcast", reflect.TypeOf((*MockNetworkService)(nil).Broadcast), arg0)
}

// Unicast mocks base method
func (_m *MockNetworkService) Unicast(message *protos.ConsensusMessage) {
	_m.ctrl.Call(_m, "Unicast", message)
}

// Unicast indicates an expected call of Unicast
func (_mr *MockNetworkServiceMockRecorder) Unicast(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Unicast", reflect.TypeOf((*MockNetworkService)(nil).Unicast), arg0)
}
