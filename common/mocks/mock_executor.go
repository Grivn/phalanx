// Code generated by MockGen. DO NOT EDIT.
// Source: executor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	types "github.com/Grivn/phalanx/common/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExecutionService is a mock of ExecutionService interface
type MockExecutionService struct {
	ctrl     *gomock.Controller
	recorder *MockExecutionServiceMockRecorder
}

// MockExecutionServiceMockRecorder is the mock recorder for MockExecutionService
type MockExecutionServiceMockRecorder struct {
	mock *MockExecutionService
}

// NewMockExecutionService creates a new mock instance
func NewMockExecutionService(ctrl *gomock.Controller) *MockExecutionService {
	mock := &MockExecutionService{ctrl: ctrl}
	mock.recorder = &MockExecutionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExecutionService) EXPECT() *MockExecutionServiceMockRecorder {
	return m.recorder
}

// CommandExecution mocks base method
func (m *MockExecutionService) CommandExecution(block types.InnerBlock, seqNo uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CommandExecution", block, seqNo)
}

// CommandExecution indicates an expected call of CommandExecution
func (mr *MockExecutionServiceMockRecorder) CommandExecution(block, seqNo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommandExecution", reflect.TypeOf((*MockExecutionService)(nil).CommandExecution), block, seqNo)
}
