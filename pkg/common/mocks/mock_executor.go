// Code generated by MockGen. DO NOT EDIT.
// Source: executor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	types "github.com/Grivn/phalanx/pkg/common/types"
	gomock "github.com/golang/mock/gomock"
)

// MockExecutor is a mock of Executor interface.
type MockExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockExecutorMockRecorder
}

// MockExecutorMockRecorder is the mock recorder for MockExecutor.
type MockExecutorMockRecorder struct {
	mock *MockExecutor
}

// NewMockExecutor creates a new mock instance.
func NewMockExecutor(ctrl *gomock.Controller) *MockExecutor {
	mock := &MockExecutor{ctrl: ctrl}
	mock.recorder = &MockExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExecutor) EXPECT() *MockExecutorMockRecorder {
	return m.recorder
}

// CommandExecution mocks base method.
func (m *MockExecutor) CommandExecution(block types.InnerBlock, seqNo uint64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CommandExecution", block, seqNo)
}

// CommandExecution indicates an expected call of CommandExecution.
func (mr *MockExecutorMockRecorder) CommandExecution(block, seqNo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommandExecution", reflect.TypeOf((*MockExecutor)(nil).CommandExecution), block, seqNo)
}
